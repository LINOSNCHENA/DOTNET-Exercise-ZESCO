[{"C:\\Users\\linos\\Downloads\\virus\\pemba-ui\\src\\index.js":"1","C:\\Users\\linos\\Downloads\\virus\\pemba-ui\\src\\App.js":"2","C:\\Users\\linos\\Downloads\\virus\\pemba-ui\\src\\reportWebVitals.js":"3","C:\\Users\\linos\\Downloads\\virus\\pemba-ui\\src\\components\\DCandidates.js":"4","C:\\Users\\linos\\Downloads\\virus\\pemba-ui\\src\\actions\\dCandidate.js":"5","C:\\Users\\linos\\Downloads\\virus\\pemba-ui\\src\\components\\DCandidateForm.js":"6","C:\\Users\\linos\\Downloads\\virus\\pemba-ui\\src\\components\\useForm.js":"7","C:\\Users\\linos\\Downloads\\virus\\pemba-ui\\src\\actions\\store.js":"8","C:\\Users\\linos\\Downloads\\virus\\pemba-ui\\src\\reducers\\index.js":"9","C:\\Users\\linos\\Downloads\\virus\\pemba-ui\\src\\reducers\\dCandidate.js":"10","C:\\Users\\linos\\Downloads\\virus\\pemba-ui\\src\\actions\\services.js":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":627,"mtime":1606604110835,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":3477,"mtime":1606604625390,"results":"16","hashOfConfig":"13"},{"size":1572,"mtime":1606602832442,"results":"17","hashOfConfig":"13"},{"size":5832,"mtime":1606605614876,"results":"18","hashOfConfig":"13"},{"size":710,"mtime":1606602709659,"results":"19","hashOfConfig":"13"},{"size":232,"mtime":1606601887608,"results":"20","hashOfConfig":"13"},{"size":142,"mtime":1606602037760,"results":"21","hashOfConfig":"13"},{"size":812,"mtime":1606602769900,"results":"22","hashOfConfig":"13"},{"size":509,"mtime":1606603543775,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"myqxlc",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},"C:\\Users\\linos\\Downloads\\virus\\pemba-ui\\src\\index.js",[],["50","51"],"C:\\Users\\linos\\Downloads\\virus\\pemba-ui\\src\\App.js",[],"C:\\Users\\linos\\Downloads\\virus\\pemba-ui\\src\\reportWebVitals.js",[],"C:\\Users\\linos\\Downloads\\virus\\pemba-ui\\src\\components\\DCandidates.js",["52"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/dCandidate\";\r\nimport {\r\n  Grid,  Paper,  TableContainer,  Table,  TableHead,  TableRow,\r\n  TableCell,  TableBody,  withStyles,  ButtonGroup,  Button,\r\n} from \"@material-ui/core\";\r\nimport DCandidateForm from \"./DCandidateForm\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    \"& .MuiTableCell-head\": {\r\n      fontSize: \"1.25rem\",\r\n    },\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(2),\r\n    padding: theme.spacing(2),\r\n  },\r\n});\r\n\r\nconst DCandidates = ({ classes, ...props }) => {\r\n  const [currentId, setCurrentId] = useState(0);\r\n\r\n  useEffect(() => {\r\n    props.fetchAllDCandidates();\r\n  }, []); //componentDidMount\r\n\r\n  //toast msg.\r\n  const { addToast } = useToasts();\r\n\r\n  const onDelete = (id) => {\r\n    if (window.confirm(\"Are you sure to delete this record?\"))\r\n      props.deleteDCandidate(id, () =>\r\n        addToast(\"Deleted successfully\", { appearance: \"info\" })\r\n      );\r\n  };\r\n  return (\r\n    <Paper className={classes.paper} elevation={3}>\r\n      <Grid container>\r\n        <Grid item xs={6}>\r\n          <DCandidateForm {...{ currentId, setCurrentId }} />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead className={classes.root}>\r\n                <TableRow>\r\n                  <TableCell>Name</TableCell>\r\n                  <TableCell>Mobile</TableCell>\r\n                  <TableCell>Status</TableCell>\r\n                  {/* <TableCell>Blood Group</TableCell> */}\r\n                  <TableCell></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {props.dCandidateList.map((record, index) => {\r\n                  return (\r\n                    <TableRow key={index} hover>\r\n                      <TableCell>{record.fullName}</TableCell>\r\n                      <TableCell>{record.mobile}</TableCell>\r\n                      <TableCell>{record.bloodGroup}</TableCell>\r\n                      <TableCell>\r\n                        <ButtonGroup variant=\"text\">\r\n                          <Button>\r\n                            <EditIcon\r\n                              color=\"primary\"\r\n                              onClick={() => {\r\n                                setCurrentId(record.id);\r\n                              }}\r\n                            />\r\n                          </Button>\r\n                          <Button>\r\n                            <DeleteIcon\r\n                              color=\"secondary\"\r\n                              onClick={() => onDelete(record.id)}\r\n                            />\r\n                          </Button>\r\n                        </ButtonGroup>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  dCandidateList: state.dCandidate.list,\r\n});\r\n\r\nconst mapActionToProps = {\r\n  fetchAllDCandidates: actions.fetchAll,\r\n  deleteDCandidate: actions.Delete,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(DCandidates));\r\n","C:\\Users\\linos\\Downloads\\virus\\pemba-ui\\src\\actions\\dCandidate.js",[],"C:\\Users\\linos\\Downloads\\virus\\pemba-ui\\src\\components\\DCandidateForm.js",["53"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  Grid,  TextField, withStyles, FormControl,\r\n  InputLabel, Select, MenuItem, Button, FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport useForm from \"./useForm\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/dCandidate\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      minWidth: 230,\r\n    },\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 230,\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n});\r\n\r\nconst initialFieldValues = {\r\n  fullName: \"\",\r\n  mobile: \"\",\r\n  email: \"\",\r\n  age: \"\",\r\n  bloodGroup: \"\",\r\n  address: \"\",\r\n};\r\n\r\nconst DCandidateForm = ({ classes, ...props }) => {\r\n  //toast message\r\n  const { addToast } = useToasts();\r\n  //validate inputs\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors };\r\n    if (\"fullName\" in fieldValues)\r\n      temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\";\r\n    if (\"mobile\" in fieldValues)\r\n      temp.mobile = fieldValues.mobile ? \"\" : \"This field is required.\";\r\n    if (\"bloodGroup\" in fieldValues)\r\n      temp.bloodGroup = fieldValues.bloodGroup ? \"\" : \"This field is required.\";\r\n    if (\"email\" in fieldValues)\r\n      temp.email = /^$|.+@.+..+/.test(fieldValues.email)\r\n        ? \"\"\r\n        : \"Email is not valid.\";\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    if (fieldValues === values) return Object.values(temp).every((x) => x === \"\");//=2\r\n  };\r\n\r\n  const {\r\n    values,\r\n    setValues,\r\n    errors,\r\n    setErrors,\r\n    handleInputChange,\r\n    resetForm,\r\n  } = useForm(initialFieldValues, validate, props.setCurrentId);\r\n\r\n  //material-ui select input\r\n  const inputLabel = React.useRef(null);\r\n  const [labelWidth, setLabelWidth] = React.useState(0);\r\n  React.useEffect(() => {\r\n    setLabelWidth(inputLabel.current.offsetWidth);\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      const onSuccess = () => {\r\n        resetForm();\r\n        addToast(\"Submitted successfully\", { appearance: \"success\" });\r\n      };\r\n      if (props.currentId === 0) props.createDCandidate(values, onSuccess);\r\n      else props.updateDCandidate(props.currentId, values, onSuccess);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.currentId !== 0) {\r\n      setValues({\r\n        ...props.dCandidateList.find((x) => x.id === props.currentId),\r\n      });\r\n      setErrors({});\r\n    }\r\n  }, [props.currentId]);\r\n\r\n  return (\r\n    <form\r\n      autoComplete=\"off\"\r\n      noValidate\r\n      className={classes.root}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <Grid container>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            name=\"fullName\"\r\n            variant=\"outlined\"\r\n            label=\"Full Name\"\r\n            value={values.fullName}\r\n            onChange={handleInputChange}\r\n            {...(errors.fullName && {\r\n              error: true,\r\n              helperText: errors.fullName,\r\n            })}\r\n          />\r\n          <TextField\r\n            name=\"email\"\r\n            variant=\"outlined\"\r\n            label=\"Email\"\r\n            value={values.email}\r\n            onChange={handleInputChange}\r\n            {...(errors.email && { error: true, helperText: errors.email })}\r\n          />\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            className={classes.formControl}\r\n            {...(errors.bloodGroup && { error: true })}\r\n          >\r\n            <InputLabel ref={inputLabel}>Department Group</InputLabel>\r\n            <Select\r\n              name=\"bloodGroup\"\r\n              value={values.bloodGroup}\r\n              onChange={handleInputChange}\r\n              labelWidth={labelWidth}\r\n            >\r\n              <MenuItem value=\"\">Select Status </MenuItem>\r\n              \r\n              <MenuItem value=\"FT\">Fulltime</MenuItem>\r\n              <MenuItem value=\"PT\">Partime</MenuItem>\r\n              <MenuItem value=\"CT\">Contractor</MenuItem>\r\n              <MenuItem value=\"PT\">Permanent</MenuItem>\r\n\r\n\r\n            </Select>\r\n            {errors.bloodGroup && (\r\n              <FormHelperText>{errors.bloodGroup}</FormHelperText>\r\n            )}\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            name=\"mobile\"\r\n            variant=\"outlined\"\r\n            label=\"Mobile\"\r\n            value={values.mobile}\r\n            onChange={handleInputChange}\r\n            {...(errors.mobile && { error: true, helperText: errors.mobile })}\r\n          />\r\n          <TextField\r\n            name=\"age\"\r\n            variant=\"outlined\"\r\n            label=\"Age\"\r\n            value={values.age}\r\n            onChange={handleInputChange}\r\n          />\r\n          <TextField\r\n            name=\"address\"\r\n            variant=\"outlined\"\r\n            label=\"Address\"\r\n            value={values.address}\r\n            onChange={handleInputChange}\r\n          />\r\n          <div>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              className={classes.smMargin}\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.smMargin}\r\n              onClick={resetForm}\r\n            >\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  dCandidateList: state.dCandidate.list,\r\n});\r\n\r\nconst mapActionToProps = {\r\n  createDCandidate: actions.create,\r\n  updateDCandidate: actions.update,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(DCandidateForm));\r\n","C:\\Users\\linos\\Downloads\\virus\\pemba-ui\\src\\components\\useForm.js",[],"C:\\Users\\linos\\Downloads\\virus\\pemba-ui\\src\\actions\\store.js",[],"C:\\Users\\linos\\Downloads\\virus\\pemba-ui\\src\\reducers\\index.js",[],"C:\\Users\\linos\\Downloads\\virus\\pemba-ui\\src\\reducers\\dCandidate.js",[],"C:\\Users\\linos\\Downloads\\virus\\pemba-ui\\src\\actions\\services.js",["54"],"import axios from \"axios\";\r\nconst baseUrl = \"http://localhost:44321/api/\";\r\n\r\nexport default {\r\n\r\n    dCandidate(url = baseUrl + 'dcandidate/') {\r\n\r\n        // crud Methods\r\n        \r\n        return {\r\n            create: newRecord => axios.post(url, newRecord),\r\n            fetchAll: () => axios.get(url),\r\n            fetchById: id => axios.get(url + id),\r\n\r\n            update: (id, updateRecord) => axios.put(url + id, updateRecord),\r\n            delete: id => axios.delete(url + id)\r\n        }\r\n    }\r\n}",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":30,"column":6,"nodeType":"61","endLine":30,"endColumn":8,"suggestions":"62"},{"ruleId":"59","severity":1,"message":"63","line":93,"column":6,"nodeType":"61","endLine":93,"endColumn":23,"suggestions":"64"},{"ruleId":"65","severity":1,"message":"66","line":4,"column":1,"nodeType":"67","endLine":19,"endColumn":2},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["70"],"React Hook useEffect has missing dependencies: 'props.dCandidateList', 'setErrors', and 'setValues'. Either include them or remove the dependency array.",["71"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},{"desc":"74","fix":"75"},"Update the dependencies array to be: [props]",{"range":"76","text":"77"},"Update the dependencies array to be: [props.currentId, props.dCandidateList, setErrors, setValues]",{"range":"78","text":"79"},[882,884],"[props]",[2572,2589],"[props.currentId, props.dCandidateList, setErrors, setValues]"]